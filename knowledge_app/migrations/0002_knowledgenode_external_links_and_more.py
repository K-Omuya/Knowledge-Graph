# Generated by Django 5.1.7 on 2025-03-24 12:56

import ckeditor.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('knowledge_app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='knowledgenode',
            name='external_links',
            field=models.TextField(blank=True, help_text='Comma-separated list of external URLs'),
        ),
        migrations.AddField(
            model_name='knowledgenode',
            name='video_embed',
            field=models.TextField(blank=True, help_text='Embed code for videos'),
        ),
        migrations.AlterField(
            model_name='knowledgenode',
            name='description',
            field=ckeditor.fields.RichTextField(),
        ),
        migrations.CreateModel(
            name='CollaborationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('request_message', models.TextField()),
                ('response_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='collaboration_approvals', to=settings.AUTH_USER_MODEL)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaboration_requests', to='knowledge_app.knowledgenode')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_collaborations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('NODE', 'Knowledge Node'), ('RELATIONSHIP', 'Relationship')], max_length=15)),
                ('object_id', models.IntegerField()),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='knowledge_app.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='learning_path_thumbnails/')),
                ('learning_objectives', models.TextField(blank=True, help_text='What students will learn from this path')),
                ('estimated_time', models.CharField(blank=True, help_text='Estimated completion time', max_length=50)),
                ('difficulty_level', models.CharField(blank=True, help_text='Beginner, Intermediate, Advanced', max_length=20)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_paths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningPathRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(help_text='Why this path is recommended')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_viewed', models.BooleanField(default=False)),
                ('is_system_generated', models.BooleanField(default=True)),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='knowledge_app.learningpath')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='path_recommendations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LearningPathStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(help_text='Order in the learning path')),
                ('title', models.CharField(blank=True, help_text='Optional override title', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Additional context for this step')),
                ('custom_content', models.TextField(blank=True, help_text='Additional content for this node in this context')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='path_steps', to='knowledge_app.knowledgenode')),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='knowledge_app.learningpath')),
            ],
            options={
                'ordering': ['path', 'order'],
                'unique_together': {('path', 'order')},
            },
        ),
        migrations.CreateModel(
            name='NodeAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='node_attachments/')),
                ('file_type', models.CharField(blank=True, max_length=50)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='knowledge_app.knowledgenode')),
            ],
        ),
        migrations.CreateModel(
            name='NodeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('knowledge_type', models.CharField(choices=[('COURSE', 'Course Knowledge'), ('IDEOLOGY', 'Ideological Element')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('change_type', models.CharField(max_length=20)),
                ('change_summary', models.TextField(blank=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='knowledge_app.knowledgenode')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='node_edits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('MULTIPLE_CHOICE', 'Multiple Choice'), ('TRUE_FALSE', 'True/False'), ('MATCHING', 'Matching'), ('TEXT', 'Text Response'), ('RELATIONSHIP', 'Relationship Identification')], max_length=20)),
                ('points', models.PositiveIntegerField(default=1)),
                ('order', models.PositiveIntegerField(default=0)),
                ('explanation', models.TextField(blank=True, help_text='Explanation of the correct answer')),
                ('related_node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questions', to='knowledge_app.knowledgenode')),
                ('related_relationship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questions', to='knowledge_app.relationship')),
            ],
            options={
                'ordering': ['quiz', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('matching_group', models.CharField(blank=True, max_length=50)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='knowledge_app.question')),
            ],
            options={
                'ordering': ['question', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('is_public', models.BooleanField(default=True)),
                ('quiz_type', models.CharField(choices=[('NODE', 'Knowledge Node Quiz'), ('RELATIONSHIP', 'Relationship Quiz'), ('PATH', 'Learning Path Quiz'), ('CUSTOM', 'Custom Quiz')], max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('time_limit', models.PositiveIntegerField(blank=True, help_text='Time limit in seconds', null=True)),
                ('passing_score', models.PositiveIntegerField(default=70, help_text='Passing score percentage')),
                ('randomize_questions', models.BooleanField(default=True)),
                ('show_correct_answers', models.BooleanField(default=True)),
                ('max_attempts', models.PositiveIntegerField(default=0, help_text='0 for unlimited attempts')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_quizzes', to=settings.AUTH_USER_MODEL)),
                ('related_node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quizzes', to='knowledge_app.knowledgenode')),
                ('related_path', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quizzes', to='knowledge_app.learningpath')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='knowledge_app.quiz'),
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('EXPIRED', 'Expired')], default='IN_PROGRESS', max_length=15)),
                ('score', models.FloatField(blank=True, null=True)),
                ('time_taken', models.PositiveIntegerField(blank=True, help_text='Time taken in seconds', null=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='knowledge_app.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizGenerationParams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty', models.CharField(choices=[('EASY', 'Easy'), ('MEDIUM', 'Medium'), ('HARD', 'Hard')], default='MEDIUM', max_length=10)),
                ('question_count', models.PositiveIntegerField(default=10)),
                ('include_node_questions', models.BooleanField(default=True)),
                ('include_relationship_questions', models.BooleanField(default=True)),
                ('focus_on_course_knowledge', models.BooleanField(default=True)),
                ('focus_on_ideology', models.BooleanField(default=True)),
                ('quiz', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='generation_params', to='knowledge_app.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='SharedEdit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='editing_sessions', to='knowledge_app.knowledgenode')),
                ('users', models.ManyToManyField(related_name='active_editing_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_response', models.TextField(blank=True)),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('points_earned', models.FloatField(default=0)),
                ('response_time', models.PositiveIntegerField(blank=True, help_text='Response time in seconds', null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='knowledge_app.question')),
                ('selected_answers', models.ManyToManyField(blank=True, related_name='responses', to='knowledge_app.answer')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='knowledge_app.quizattempt')),
            ],
            options={
                'unique_together': {('attempt', 'question')},
            },
        ),
        migrations.CreateModel(
            name='StepCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_spent', models.PositiveIntegerField(default=0, help_text='Time spent in seconds')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completions', to='knowledge_app.learningpathstep')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completed_steps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'step')},
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NOT_STARTED', 'Not Started'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed')], default='NOT_STARTED', max_length=15)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('completion_percentage', models.FloatField(default=0.0)),
                ('notes', models.TextField(blank=True, help_text="User's personal notes about this path")),
                ('current_step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_users', to='knowledge_app.learningpathstep')),
                ('path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='knowledge_app.learningpath')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='path_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'path')},
            },
        ),
    ]
